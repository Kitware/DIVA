#
# Streaming ACT
#
config input 
 exp_file = /data/diva/baselines/activity_localization/act_detector/virat-act-detector-scripts/rgb_eval_1b.yml
 darknet_root = /home/local/KHQ/ameya.shringi/ipc/darknet

process zmq :: zmq_transport_receive
  port = 5560
  num_publishers = 1

# --------------------------------------------------
process dser :: deserializer
        serialization_type = protobuf 

connect from zmq.serialized_message to dser.timg

# --------------------------------------------------
process opt_flow :: optical_flow
  output_image_width=300
  ouptut_image_height=300

connect from dser.timg/image to opt_flow.image
connect from dser.timg/timestamp to opt_flow.timestamp

# --------------------------------------------------
process act_process :: ACTProcess
  exp = $CONFIG{input:exp_file}
  connect from opt_flow.image to act_process.flow_image
  connect from dser.timg/image to act_process.rgb_image
  connect from dser.timg/timestamp to act_process.timestamp

# -------------------------------------------------------------------
process merge_tubes :: MergeTubes
  exp = $CONFIG{input:exp_file}
  
  connect from act_process.object_track_set to merge_tubes.object_track_set
  connect from dser.timg/timestamp to merge_tubes.timestamp

# ------------------------------------------------------------------
process yolo_v2
  :: image_object_detector
  :detector:type    darknet

  # Network config, weights, and names
  :detector:darknet:net_config   $CONFIG{input:darknet_root}/models/virat_auto.inference.cfg
  :detector:darknet:weight_file  $CONFIG{input:darknet_root}/models/virat_auto_final.weights
  :detector:darknet:class_names  $CONFIG{input:darknet_root}/models/virat.names

  # Detector parameters
  :detector:darknet:thresh       0.50
  :detector:darknet:hier_thresh  0.5
  :detector:darknet:gpu_index    1

  # Image scaling parameters
  #:detector:darknet:resize_option maintain_ar
  :detector:darknet:resize_ni     1024
  :detector:darknet:resize_nj     1024
  #:detector:darknet:scale         1.0
  connect from dser.timg/image to yolo_v2.image

# -------------------------------------------------------------------
process expand_bbox :: ModifyBboxResolution
  connect from yolo_v2.detected_object_set to expand_bbox.detected_object_set 

# -------------------------------------------------------------------
process visualize :: ACTVisualize
   exp = $CONFIG{input:exp_file}
   is_aod = True
  
   connect from merge_tubes.current_object_track_set to visualize.object_track_set
   connect from dser.timg/image to visualize.image
   connect from dser.timg/timestamp to visualize.timestamp
   connect from expand_bbox.detected_object_set to visualize.detected_object_set

# ------------------------------------------------------------------
process img_writer::image_writer
  file_name_template = act-aod-vis/image%06d.jpg
  image_writer:type = ocv
connect from visualize.image to img_writer.image


#connect from opt_flow.image to sink_image.image
# use python scheduler

# -------------------------------------------------
config _scheduler
  type = pythread_per_process

config _pipeline:_edge
  capacity = 1
