#
# Pipe file to run RC3D
#

# RC3D experiment configuration
config rc3d
 exp_file = /home/local/KHQ/ameya.shringi/ipc/R-C3D/experiments/virat/experiment.yml
 model_cfg = /home/local/KHQ/ameya.shringi/ipc/R-C3D/experiments/virat/td_cnn_end2end.yml


process zmq :: zmq_transport_receive
  port = 5560
  num_publishers = 1

# --------------------------------------------------
process dser :: deserializer
        serialization_type = protobuf 

connect from zmq.serialized_message to dser.timg

# ------------------------------------------------------------------
# RC3D instance
process rc3d :: RC3DDetector
  stride = 8
  experiment_file_name = $CONFIG{rc3d:exp_file}
  model_cfg = $CONFIG{rc3d:model_cfg}
  gpu = 3
  
connect from dser.timg/image     to rc3d.image
connect from dser.timg/timestamp to rc3d.timestamp
connect from dser.timg/file_name to rc3d.file_name

# ------------------------------------------------------------------
process json_writer :: RC3DJsonWriter
  experiment_file_name = $CONFIG{rc3d:exp_file}
  model_cfg = $CONFIG{rc3d:model_cfg}

connect from rc3d.detected_object_set to json_writer.detected_object_set
connect from dser.timg/timestamp to json_writer.timestamp
connect from dser.timg/file_name to json_writer.file_name

# ------------------------------------------------------------------
# Visualizer
process visualize :: RC3DVisualizer
  legend_text_height = 8
  legend_text_font_scale = 0.6
  swimlane_text_height = 7
  swimlane_text_font_scale = 0.5
  experiment_file_name = $CONFIG{rc3d:exp_file}
  confidence_threshold = 0.05

connect from rc3d.detected_object_set to visualize.detected_object_set
connect from dser.timg/timestamp           to visualize.timestamp
connect from dser.timg/image               to visualize.image

# ------------------------------------------------------------------
process activity_visualizer::image_viewer
  pause_time = 0.01
  title = activity
connect from visualize.image to activity_visualizer.image

# ------------------------------------------------------------------
# use python scheduler
config _scheduler
  type = pythread_per_process

config _pipeline:_edge
  capacity = 1     # set default edge capacity
