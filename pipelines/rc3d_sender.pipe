#
# Pipe file to test RC3D
#

# Image configuration
config input 
 exp_file = etc/rc3d_experiment.yml 

# RC3D experiment configuration
config rc3d
 exp_file = /home/local/KHQ/ameya.shringi/R-C3D/experiments/virat/experiment.yml

# ------------------------------------------------------------------
process exp :: diva_experiment
  experiment_file_name = $CONFIG{input:exp_file}

# ------------------------------------------------------------------
# RC3D instance
process rc3d :: RC3DProcess
  stride = 8
  experiment_file_name = $CONFIG{rc3d:exp_file}
  gpu = 3
  
connect from exp.image     to rc3d.image
connect from exp.timestamp to rc3d.timestamp
# ------------------------------------------------------------------
# Serialized message for the json writer
process protobuf_ser :: serializer
  serialization_type = protobuf 

# Message for rc3d  
connect from rc3d.detected_object_set to protobuf_ser.tdos/detected_object_set
connect from exp.timestamp to protobuf_ser.tdos/timestamp

# Message for visualizer
#connect from rc3d.detected_object_set to protobuf_ser.img_tdos/detected_object_set
#connect from exp.timestamp to protobuf_ser.img_tdos/timestamp
#connect from exp.image to protobuf_ser.img_tdos/image

process zmq_dos :: zmq_transport_send
  port = 5560
  expected_subscribers=2

connect from protobuf_ser.tdos to zmq_dos.serialized_message

#process zmq_img_dos :: zmq_transport_send
#  port = 6560

#connect from protobuf_ser.img_tdos to zmq_img_dos.serialized_message

# ------------------------------------------------------------------
# Visualizers
# process visualize :: VisualizeProcess
#  connect from rc3d.detected_object_set to visualize.detected_object_set
#  connect from exp.timestamp            to visualize.timestamp
#  connect from exp.image                to visualize.image

#process swimlane :: SwimlaneProcess
#  experiment_file_name = $CONFIG{rc3d:exp_file}
#  text_buffer = 10
#  connect from rc3d.detected_object_set to swimlane.detected_object_set
#  connect from exp.timestamp            to swimlane.timestamp

# ------------------------------------------------------------------
#process activity_visualizer::image_viewer
#  pause_time = 0.01
#  title = activity
#  connect from visualize.image to activity_visualizer.image

#process swimlane_visualizer::image_viewer
#  pause_time = 0.01
#  title = swimlane
#  connect from swimlane.image to swimlane_visualizer.image

# ------------------------------------------------------------------
# use python scheduler
config _scheduler
  type = pythread_per_process

config _pipeline:_edge
  capacity = 1     # set default edge capacity
